;===================================== global namespace
[buildout]
log-level          = INFO
allow-hosts        = *

extends =
;------------------------------------- modules selector
#    honeypy.buildout/modules/debugging.cfg
#    honeypy.buildout/modules/testing.cfg
#    honeypy.buildout/modules/documentation.cfg
#    honeypy.buildout/modules/documentation.scaffold.cfg  
;------------------------------------- upper stack selector
    honeypy.buildout/stacks/standalone.cfg
#    honeypy.buildout/stacks/zeo.cfg
;------------------------------------- lower stack selector
#    honeypy.buildout/stacks/nginx.cfg
#    honeypy.buildout/stacks/varnish-nginx.cfg


;===================================== local namespace
[production]
parts =
    production.message
;------------------------------------- modules selector
#    ${debugging:parts}
#    ${testing:parts}
#    ${documentation:parts}
#    ${documentation.scaffold:parts}
;------------------------------------- upper stack selector
#    ${standalone:parts}
#    ${zeo:parts}
;------------------------------------- lower stack selector
#    ${unplugged:parts}

;===================================== local namespace
[environment]
type               = production
; Development Host
domain             = honeypy.local
host-name          = localhost
hots-ip            = 127.0.0.1
; Per default the user from buildout.cfg is taken here.
; Change it, if it doesn't fit your needs.
user               = ${buildout:user}
; Development Application
webaccess-admin    = admin
webaccess-password = admin


;===================================== mr.developer sources
; List version controlled repositories (local or remote) here.
; mr.developer will check them out and clone into src/ for you.
; Define the branch you want to use in production mode.
; More info on: https://pypi.python.org/pypi/mr.developer
[sources]


;===================================== parts
[production.message]
recipe  = honeypy.recipe.message
message = Install in a DEVELOPMENT environment!
